CMAKE_MINIMUM_REQUIRED(VERSION 3.11)

PROJECT(iot-server
    VERSION 0.1
    DESCRIPTION "iot-server"
    LANGUAGES C CXX ASM)

# specify the C++ standard
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

SET(CMAKE_CXX20_STANDARD_COMPILE_OPTION "-std=c++2a")
SET(CMAKE_CXX20_EXTENSION_COMPILE_OPTION "-std=gnu++20")

SET(CMAKE_C_COMPILER gcc)
SET(CMAKE_CXX_COMPILER g++-11)
SET(CMAKE_ASM_COMPILER gcc)
SET(CMAKE_OBJCOPY objcopy CACHE INTERNAL "objcopy tool")
SET(CMAKE_OBJDUMP objdump CACHE INTERNAL "objdump tool")
SET(CMAKE_SIZE size CACHE INTERNAL "size tool")
SET(CMAKE_STRIP strip CACHE INTERNAL "strip tool")

SET(TARGET_CPU_FLAGS "-mcpu=cortex-m7 -march=armv7e-m+fp.dp -mtune=cortex-m7 -mthumb -mfpu=fpv5-sp-d16 -mfloat-abi=hard")
SET(CMAKE_C_FLAGS_DEBUG_INIT "-O0 -g3" CACHE STRING "c compiler flags debug" )
SET(CMAKE_CXX_FLAGS_DEBUG_INIT "-O0 -g3" CACHE STRING "cxx compiler flags debug")
SET(CMAKE_ASM_FLAGS_DEBUG_INIT "-g3" CACHE STRING "asm compiler flags debug")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT "" CACHE STRING "linker flags debug")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_DEBUG_INIT} -ffunction-sections -fdata-sections -Wno-psabi")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG_INIT} -ffunction-sections -fdata-sections -Wno-psabi -pthread")

SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

SET(TARGET_NAME iot-server)
ADD_EXECUTABLE(${TARGET_NAME})
TARGET_COMPILE_OPTIONS(${TARGET_NAME} PRIVATE -Wall -Wextra -pedantic -Werror -Wswitch)
TARGET_LINK_LIBRARIES(${TARGET_NAME} curl sqlite3)

# add project source directory
TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}/src)

INCLUDE(${CMAKE_CURRENT_LIST_DIR}/src/CMakeLists.txt)
